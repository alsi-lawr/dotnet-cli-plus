From 7405fa65f0499946d2d72ee99aa5ce198ec758cf Mon Sep 17 00:00:00 2001
From: alsi-lawr <alexlawrence1418@gmail.com>
Date: Sun, 1 Sep 2024 20:49:06 +0100
Subject: [PATCH] patch

---
 .../LocalizableStrings.Designer.cs            | 162 +++++++++++
 .../Microsoft.DotNet.Cli.Sln.Internal.csproj  |  13 +-
 .../LocalizableStrings.Designer.cs            | 266 ++++++++++++++++++
 .../Microsoft.DotNet.Cli.Utils.csproj         |  60 ++--
 4 files changed, 462 insertions(+), 39 deletions(-)
 create mode 100644 src/Cli/Microsoft.DotNet.Cli.Sln.Internal/LocalizableStrings.Designer.cs
 create mode 100644 src/Cli/Microsoft.DotNet.Cli.Utils/LocalizableStrings.Designer.cs

diff --git a/src/Cli/Microsoft.DotNet.Cli.Sln.Internal/LocalizableStrings.Designer.cs b/src/Cli/Microsoft.DotNet.Cli.Sln.Internal/LocalizableStrings.Designer.cs
new file mode 100644
index 0000000000..2aae26e52b
--- /dev/null
+++ b/src/Cli/Microsoft.DotNet.Cli.Sln.Internal/LocalizableStrings.Designer.cs
@@ -0,0 +1,162 @@
+﻿//------------------------------------------------------------------------------
+// <auto-generated>
+//     This code was generated by a tool.
+//     Runtime Version:4.0.30319.42000
+//
+//     Changes to this file may cause incorrect behavior and will be lost if
+//     the code is regenerated.
+// </auto-generated>
+//------------------------------------------------------------------------------
+
+namespace Microsoft.DotNet.Cli.Sln.Internal {
+    using System;
+    
+    
+    /// <summary>
+    ///   A strongly-typed resource class, for looking up localized strings, etc.
+    /// </summary>
+    // This class was auto-generated by the StronglyTypedResourceBuilder
+    // class via a tool like ResGen or Visual Studio.
+    // To add or remove a member, edit your .ResX file then rerun ResGen
+    // with the /str option, or rebuild your VS project.
+    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
+    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
+    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
+    internal class LocalizableStrings {
+        
+        private static global::System.Resources.ResourceManager resourceMan;
+        
+        private static global::System.Globalization.CultureInfo resourceCulture;
+        
+        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
+        internal LocalizableStrings() {
+        }
+        
+        /// <summary>
+        ///   Returns the cached ResourceManager instance used by this class.
+        /// </summary>
+        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
+        internal static global::System.Resources.ResourceManager ResourceManager {
+            get {
+                if (object.ReferenceEquals(resourceMan, null)) {
+                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.DotNet.Cli.Sln.Internal.LocalizableStrings", typeof(LocalizableStrings).Assembly);
+                    resourceMan = temp;
+                }
+                return resourceMan;
+            }
+        }
+        
+        /// <summary>
+        ///   Overrides the current thread's CurrentUICulture property for all
+        ///   resource lookups using this strongly typed resource class.
+        /// </summary>
+        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
+        internal static global::System.Globalization.CultureInfo Culture {
+            get {
+                return resourceCulture;
+            }
+            set {
+                resourceCulture = value;
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to Closing section tag not found.
+        /// </summary>
+        internal static string ClosingSectionTagNotFoundError {
+            get {
+                return ResourceManager.GetString("ClosingSectionTagNotFoundError", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to Invalid format in line {0}: {1}.
+        /// </summary>
+        internal static string ErrorMessageFormatString {
+            get {
+                return ResourceManager.GetString("ErrorMessageFormatString", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to Expected file header not found.
+        /// </summary>
+        internal static string FileHeaderMissingError {
+            get {
+                return ResourceManager.GetString("FileHeaderMissingError", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to File header is missing version.
+        /// </summary>
+        internal static string FileHeaderMissingVersionError {
+            get {
+                return ResourceManager.GetString("FileHeaderMissingVersionError", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to Global section specified more than once.
+        /// </summary>
+        internal static string GlobalSectionMoreThanOnceError {
+            get {
+                return ResourceManager.GetString("GlobalSectionMoreThanOnceError", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to Global section not closed.
+        /// </summary>
+        internal static string GlobalSectionNotClosedError {
+            get {
+                return ResourceManager.GetString("GlobalSectionNotClosedError", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to Property set is missing &apos;{0}&apos;.
+        /// </summary>
+        internal static string InvalidPropertySetFormatString {
+            get {
+                return ResourceManager.GetString("InvalidPropertySetFormatString", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to Invalid section type: {0}.
+        /// </summary>
+        internal static string InvalidSectionTypeError {
+            get {
+                return ResourceManager.GetString("InvalidSectionTypeError", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to Project section is missing &apos;{0}&apos; when parsing the line starting at position {1}.
+        /// </summary>
+        internal static string ProjectParsingErrorFormatString {
+            get {
+                return ResourceManager.GetString("ProjectParsingErrorFormatString", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to Project section not closed.
+        /// </summary>
+        internal static string ProjectSectionNotClosedError {
+            get {
+                return ResourceManager.GetString("ProjectSectionNotClosedError", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to Section id missing.
+        /// </summary>
+        internal static string SectionIdMissingError {
+            get {
+                return ResourceManager.GetString("SectionIdMissingError", resourceCulture);
+            }
+        }
+    }
+}
diff --git a/src/Cli/Microsoft.DotNet.Cli.Sln.Internal/Microsoft.DotNet.Cli.Sln.Internal.csproj b/src/Cli/Microsoft.DotNet.Cli.Sln.Internal/Microsoft.DotNet.Cli.Sln.Internal.csproj
index 1618b78049..30f43bca1a 100644
--- a/src/Cli/Microsoft.DotNet.Cli.Sln.Internal/Microsoft.DotNet.Cli.Sln.Internal.csproj
+++ b/src/Cli/Microsoft.DotNet.Cli.Sln.Internal/Microsoft.DotNet.Cli.Sln.Internal.csproj
@@ -12,9 +12,20 @@
   </PropertyGroup>
 
   <ItemGroup>
-    <EmbeddedResource Update="**\*.resx" GenerateSource="true" />
+    <EmbeddedResource Update="LocalizableStrings.resx" GenerateSource="true">
+      <Generator>ResXFileCodeGenerator</Generator>
+      <LastGenOutput>LocalizableStrings.Designer.cs</LastGenOutput>
+    </EmbeddedResource>
   </ItemGroup>
 
+  <ItemGroup>
+    <Compile Update="LocalizableStrings.Designer.cs">
+      <DesignTime>True</DesignTime>
+      <AutoGen>True</AutoGen>
+      <DependentUpon>LocalizableStrings.resx</DependentUpon>
+    </Compile>
+  </ItemGroup>
+  
   <ItemGroup>
     <ProjectReference Include="../Microsoft.DotNet.Cli.Utils/Microsoft.DotNet.Cli.Utils.csproj" />
   </ItemGroup>
diff --git a/src/Cli/Microsoft.DotNet.Cli.Utils/LocalizableStrings.Designer.cs b/src/Cli/Microsoft.DotNet.Cli.Utils/LocalizableStrings.Designer.cs
new file mode 100644
index 0000000000..dabedd1cf1
--- /dev/null
+++ b/src/Cli/Microsoft.DotNet.Cli.Utils/LocalizableStrings.Designer.cs
@@ -0,0 +1,266 @@
+﻿//------------------------------------------------------------------------------
+// <auto-generated>
+//     This code was generated by a tool.
+//     Runtime Version:4.0.30319.42000
+//
+//     Changes to this file may cause incorrect behavior and will be lost if
+//     the code is regenerated.
+// </auto-generated>
+//------------------------------------------------------------------------------
+
+namespace Microsoft.DotNet.Cli.Utils {
+    using System;
+    
+    
+    /// <summary>
+    ///   A strongly-typed resource class, for looking up localized strings, etc.
+    /// </summary>
+    // This class was auto-generated by the StronglyTypedResourceBuilder
+    // class via a tool like ResGen or Visual Studio.
+    // To add or remove a member, edit your .ResX file then rerun ResGen
+    // with the /str option, or rebuild your VS project.
+    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
+    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
+    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
+    internal class LocalizableStrings {
+        
+        private static global::System.Resources.ResourceManager resourceMan;
+        
+        private static global::System.Globalization.CultureInfo resourceCulture;
+        
+        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
+        internal LocalizableStrings() {
+        }
+        
+        /// <summary>
+        ///   Returns the cached ResourceManager instance used by this class.
+        /// </summary>
+        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
+        internal static global::System.Resources.ResourceManager ResourceManager {
+            get {
+                if (object.ReferenceEquals(resourceMan, null)) {
+                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.DotNet.Cli.Utils.LocalizableStrings", typeof(LocalizableStrings).Assembly);
+                    resourceMan = temp;
+                }
+                return resourceMan;
+            }
+        }
+        
+        /// <summary>
+        ///   Overrides the current thread's CurrentUICulture property for all
+        ///   resource lookups using this strongly typed resource class.
+        /// </summary>
+        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
+        internal static global::System.Globalization.CultureInfo Culture {
+            get {
+                return resourceCulture;
+            }
+            set {
+                resourceCulture = value;
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to Already capturing stream!.
+        /// </summary>
+        internal static string AlreadyCapturingStream {
+            get {
+                return ResourceManager.GetString("AlreadyCapturingStream", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to Cannot find command &apos;dotnet {0}&apos;, run the following command to install
+        ///
+        ///dotnet tool install --global {1}.
+        /// </summary>
+        internal static string CannotFindCommandAvailableAsTool {
+            get {
+                return ResourceManager.GetString("CannotFindCommandAvailableAsTool", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to Could not access assets file..
+        /// </summary>
+        internal static string CouldNotAccessAssetsFile {
+            get {
+                return ResourceManager.GetString("CouldNotAccessAssetsFile", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to Using home directory &apos;{0}&apos; set by the &apos;{1}&apos; environment variable..
+        /// </summary>
+        internal static string DotnetCliHomeUsed {
+            get {
+                return ResourceManager.GetString("DotnetCliHomeUsed", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to Runtime Environment:.
+        /// </summary>
+        internal static string DotNetRuntimeInfoLabel {
+            get {
+                return ResourceManager.GetString("DotNetRuntimeInfoLabel", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to .NET SDK.
+        /// </summary>
+        internal static string DotNetSdkInfo {
+            get {
+                return ResourceManager.GetString("DotNetSdkInfo", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to .NET SDK:.
+        /// </summary>
+        internal static string DotNetSdkInfoLabel {
+            get {
+                return ResourceManager.GetString("DotNetSdkInfoLabel", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to .NET workloads installed:.
+        /// </summary>
+        internal static string DotnetWorkloadInfoLabel {
+            get {
+                return ResourceManager.GetString("DotnetWorkloadInfoLabel", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to Unable to use &apos;{0}&apos; as application host executable as it does not contain the expected placeholder byte sequence &apos;{1}&apos; that would mark where the application name would be written..
+        /// </summary>
+        internal static string EmbedAppNameInHostAppHostHasBeenModified {
+            get {
+                return ResourceManager.GetString("EmbedAppNameInHostAppHostHasBeenModified", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to Given file name &apos;{0}&apos; is longer than 1024 bytes.
+        /// </summary>
+        internal static string EmbedAppNameInHostFileNameIsTooLong {
+            get {
+                return ResourceManager.GetString("EmbedAppNameInHostFileNameIsTooLong", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to File not found `{0}`..
+        /// </summary>
+        internal static string FileNotFound {
+            get {
+                return ResourceManager.GetString("FileNotFound", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to Malformed command text &apos;{0}&apos;.
+        /// </summary>
+        internal static string MalformedText {
+            get {
+                return ResourceManager.GetString("MalformedText", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to Possible reasons for this include:
+        ///  * You misspelled a built-in dotnet command.
+        ///  * You intended to execute a .NET program, but {0} does not exist.
+        ///  * You intended to run a global tool, but a dotnet-prefixed executable with this name could not be found on the PATH..
+        /// </summary>
+        internal static string NoExecutableFoundMatchingCommand {
+            get {
+                return ResourceManager.GetString("NoExecutableFoundMatchingCommand", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to Could not execute because the specified command or file was not found..
+        /// </summary>
+        internal static string NoExecutableFoundMatchingCommandErrorMessage {
+            get {
+                return ResourceManager.GetString("NoExecutableFoundMatchingCommandErrorMessage", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to &lt; {0} exited with {1} in {2} ms..
+        /// </summary>
+        internal static string ProcessExitedWithCode {
+            get {
+                return ResourceManager.GetString("ProcessExitedWithCode", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to Process ID: {0}.
+        /// </summary>
+        internal static string ProcessId {
+            get {
+                return ResourceManager.GetString("ProcessId", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to The project may not have been restored or restore failed - run `dotnet restore`.
+        /// </summary>
+        internal static string ProjectNotRestoredOrRestoreFailed {
+            get {
+                return ResourceManager.GetString("ProjectNotRestoredOrRestoreFailed", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to Running {0} {1}.
+        /// </summary>
+        internal static string RunningFileNameArguments {
+            get {
+                return ResourceManager.GetString("RunningFileNameArguments", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to Unable to invoke {0} after the command has been run.
+        /// </summary>
+        internal static string UnableToInvokeMemberNameAfterCommand {
+            get {
+                return ResourceManager.GetString("UnableToInvokeMemberNameAfterCommand", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to Unable to locate dotnet multiplexer.
+        /// </summary>
+        internal static string UnableToLocateDotnetMultiplexer {
+            get {
+                return ResourceManager.GetString("UnableToLocateDotnetMultiplexer", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to Waiting for debugger to attach. Press ENTER to continue.
+        /// </summary>
+        internal static string WaitingForDebuggerToAttach {
+            get {
+                return ResourceManager.GetString("WaitingForDebuggerToAttach", resourceCulture);
+            }
+        }
+        
+        /// <summary>
+        ///   Looks up a localized string similar to WriteLine forwarder set previously.
+        /// </summary>
+        internal static string WriteLineForwarderSetPreviously {
+            get {
+                return ResourceManager.GetString("WriteLineForwarderSetPreviously", resourceCulture);
+            }
+        }
+    }
+}
diff --git a/src/Cli/Microsoft.DotNet.Cli.Utils/Microsoft.DotNet.Cli.Utils.csproj b/src/Cli/Microsoft.DotNet.Cli.Utils/Microsoft.DotNet.Cli.Utils.csproj
index 94beec9202..90bfa07f9e 100644
--- a/src/Cli/Microsoft.DotNet.Cli.Utils/Microsoft.DotNet.Cli.Utils.csproj
+++ b/src/Cli/Microsoft.DotNet.Cli.Utils/Microsoft.DotNet.Cli.Utils.csproj
@@ -1,46 +1,17 @@
-﻿<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <PropertyGroup>
-    <OutDirName>Tests\$(MSBuildProjectName)</OutDirName>
-  </PropertyGroup>
-
-  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" />
+﻿<Project Sdk="Microsoft.NET.Sdk">
 
   <PropertyGroup>
-    <TargetFrameworks>$(ResolverTargetFramework);net472</TargetFrameworks>
-    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
-    <StrongNameKeyId>MicrosoftAspNetCore</StrongNameKeyId>
-    <SignAssembly>true</SignAssembly>
-    <PublicSign Condition=" '$([MSBuild]::IsOSPlatform(`Windows`))' == 'false' ">true</PublicSign>
     <IsPackable>true</IsPackable>
+    <ImplicitUsings>enable</ImplicitUsings>
     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
-
-    <!-- Avoid https://github.com/dotnet/arcade/issues/9305 -->
-    <AutoGenerateBindingRedirects>false</AutoGenerateBindingRedirects>
+    <RootNamespace>Microsoft.DotNet.Cli.Utils</RootNamespace>
+    <TargetFramework>net8.0</TargetFramework>
+    <OutputType>library</OutputType>
+    <EnableDefaultEmbeddedResourceItems>false</EnableDefaultEmbeddedResourceItems>
   </PropertyGroup>
 
   <ItemGroup>
-    <EmbeddedResource Update="**\*.resx" GenerateSource="true" />
-  </ItemGroup>
-
-  <Target Name="VerifyMSBuildDependency" BeforeTargets="ResolveAssemblyReferences" Condition="'$([MSBuild]::GetTargetFrameworkIdentifier($(TargetFramework)))' == '.NETCoreApp'">
-    <!-- We explicitly reference an older version of MSBuild here to support VS
-    for Mac and other VS scenarios. During source-build, we only have access to
-    the latest version, which targets NetCurrent. -->
-    <PropertyGroup>
-      <MSBuildPathInPackage>$(PkgMicrosoft_Build_Runtime)\contentFiles\any\net8.0\MSBuild.dll</MSBuildPathInPackage>
-      <MSBuildPathInPackage Condition="'$(DotNetBuildSourceOnly)' == 'true' and !Exists($(MSBuildPathInPackage))">$(PkgMicrosoft_Build_Runtime)\contentFiles\any\$(NetCurrent)\MSBuild.dll</MSBuildPathInPackage>
-    </PropertyGroup>
-    <Error Condition="!Exists('$(MSBuildPathInPackage)')" Text="Something moved around in Microsoft.Build.Runtime, adjust code here accordingly." />
-    <ItemGroup>
-      <Reference Include="$(MSBuildPathInPackage)" />
-    </ItemGroup>
-  </Target>
-
-  <ItemGroup>
-    <PackageReference Include="Microsoft.Build.Runtime"
-        ExcludeAssets="all"
-        Condition="'$([MSBuild]::GetTargetFrameworkIdentifier($(TargetFramework)))' == '.NETCoreApp'"
-        GeneratePathProperty="true" />
+    <PackageReference Include="Microsoft.Build.Runtime" />
     <PackageReference Include="Microsoft.Extensions.DependencyModel" />
     <PackageReference Include="NuGet.Versioning" />
     <PackageReference Include="NuGet.Packaging" />
@@ -50,6 +21,19 @@
     <PackageReference Include="Microsoft.Build.Utilities.Core" ExcludeAssets="runtime" PrivateAssets="all" />
     <PackageReference Include="System.CommandLine" />
   </ItemGroup>
-
-  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />
+  
+  <ItemGroup>
+    <EmbeddedResource Include="LocalizableStrings.resx" GenerateSource="true">
+      <Generator>ResXFileCodeGenerator</Generator>
+      <LastGenOutput>LocalizableStrings.Designer.cs</LastGenOutput>
+    </EmbeddedResource>
+  </ItemGroup>
+  
+  <ItemGroup>
+    <Compile Update="LocalizableStrings.Designer.cs">
+      <DesignTime>True</DesignTime>
+      <AutoGen>True</AutoGen>
+      <DependentUpon>LocalizableStrings.resx</DependentUpon>
+    </Compile>
+  </ItemGroup>
 </Project>
-- 
2.43.0

